{"version":3,"sources":["Books.js","App.js","reportWebVitals.js","index.js"],"names":["Books","columns","label","field","sort","width","rows","BookID","Title","Author","Price","PublishDate","App","useState","name","type","columnSort","setColumnSort","search","setSearch","results","setResults","useEffect","handleSearch","invert","asc","desc","prop","res","filter","book","toLowerCase","includes","Book","data","map","idx","className","placeholder","onChange","e","target","value","onClick","orderBy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cdff437.chunk.js","sourcesContent":["const Books = {\r\n  columns: [\r\n    {\r\n      label: 'BookId',\r\n      field: 'BookId',\r\n      sort: 'asc',\r\n      width: 150,\r\n    },\r\n    {\r\n      label: 'Title',\r\n      field: 'Title',\r\n      sort: 'asc',\r\n      width: 270,\r\n    },\r\n    {\r\n      label: 'Author',\r\n      field: 'Author',\r\n      sort: 'asc',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Price',\r\n      field: 'Price',\r\n      sort: 'asc',\r\n      width: 100,\r\n    },\r\n    {\r\n      label: 'PublishDate',\r\n      field: 'PublishDate',\r\n      sort: 'asc',\r\n      width: 150,\r\n    },\r\n  ],\r\n  rows: [\r\n    {\r\n      BookID: 1,\r\n      Title: 'The Great Gatsby',\r\n      Author: 'F. Scott Fitgerald',\r\n      Price: 8.99,\r\n      PublishDate: '4/10/1925',\r\n    },\r\n    {\r\n      BookID: 2,\r\n      Title: 'Crime and Punishment',\r\n      Author: 'Fyodor Dostoyevsky',\r\n      Price: 12.99,\r\n      PublishDate: '2/12/1866',\r\n    },\r\n    {\r\n      BookID: 3,\r\n      Title: 'Don Quixote',\r\n      Author: 'Miguel de Cervantes',\r\n      Price: 6.99,\r\n      PublishDate: '1/15/1620',\r\n    },\r\n    {\r\n      BookID: 4,\r\n      Title: 'Jane Eyre',\r\n      Author: 'Charlotte Bronte',\r\n      Price: 9.99,\r\n      PublishDate: '10/16/1847',\r\n    },\r\n    {\r\n      BookID: 5,\r\n      Title: 'Moby Dick',\r\n      Author: 'Herman Melville',\r\n      Price: 4.99,\r\n      PublishDate: '10/18/1851',\r\n    },\r\n    {\r\n      BookID: 6,\r\n      Title: 'War and Peace',\r\n      Author: 'Leo Tolstoy',\r\n      Price: 14.99,\r\n      PublishDate: '8/1/1869',\r\n    },\r\n    {\r\n      BookID: 7,\r\n      Title: 'Wuthering Heights',\r\n      Author: 'Emily Bronte',\r\n      Price: 7.99,\r\n      PublishDate: '12/7/1847',\r\n    },\r\n    {\r\n      BookID: 8,\r\n      Title: 'The Adventures of Huckleberry Finn',\r\n      Author: 'Mark Twain',\r\n      Price: 5.99,\r\n      PublishDate: '12/10/1884',\r\n    },\r\n  ],\r\n}\r\n\r\nexport default Books\r\n","import { useEffect, useState } from 'react'\nimport './App.css'\n\nimport orderBy from 'lodash/orderBy'\nimport Books from './Books'\n\nfunction App() {\n  const [columnSort, setColumnSort] = useState({ name: '', type: 'asc' })\n  const [search, setSearch] = useState('')\n  const [results, setResults] = useState(Books.rows)\n\n  useEffect(() => {\n    handleSearch()\n    //eslint-disable-next-line\n  }, [search])\n\n  const invert = {\n    asc: 'desc',\n    desc: 'asc',\n  }\n\n  const sort = (prop) => {\n    setColumnSort({\n      name: prop,\n      type: columnSort.name === prop ? invert[columnSort.type] : 'asc',\n    })\n  }\n\n  const handleSearch = () => {\n    let res = Books.rows.filter(\n      (book) =>\n        book.Author.toLowerCase().includes(search.toLowerCase()) ||\n        book.Title.toLowerCase().includes(search.toLowerCase())\n    )\n    setResults(res)\n  }\n\n  const Book = ({ data }) =>\n    data.map((book, idx) => (\n      <tr key={idx} className='row'>\n        <td className='id'>{book.BookID}</td>\n        <td className='title'>{book.Title}</td>\n        <td className='author'>{book.Author}</td>\n        <td className='price'>{book.Price}</td>\n        <td className='publishDate'>{book.PublishDate}</td>\n      </tr>\n    ))\n\n  return (\n    <div className='App'>\n      <input\n        className='search'\n        type='search'\n        placeholder='search Title or Author'\n        onChange={(e) => setSearch(e.target.value)}\n        value={search}\n      />\n      <table className='books'>\n        <thead>\n          <tr>\n            <th onClick={() => sort('BookID')}>Id</th>\n            <th onClick={() => sort('Title')}>Title</th>\n            <th onClick={() => sort('Author')}>Author</th>\n            <th onClick={() => sort('Price')}>Price</th>\n            <th onClick={() => sort('PublishDate')}>PublishDate</th>\n          </tr>\n        </thead>\n        <tbody>\n          <Book data={orderBy(results, columnSort.name, columnSort.type)} />\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}